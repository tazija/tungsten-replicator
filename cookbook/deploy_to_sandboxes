#!/bin/bash
# (C) Copyright 2012,2013 Continuent, Inc - Released under the New BSD License
# Version 1.0.5 - 2013-04-03

cookbook_dir=$(dirname $0)

[ -z "$MYSQL_VERSION" ] && MYSQL_VERSION=5.5.30
[ -z "$MYSQL_PORT" ]    && MYSQL_PORT=17100
[ -z "$SANDBOX_DIR" ]   && SANDBOX_DIR=tungsten_deployment
UPDATE_USER_VALUES=1
NODES_LIST=

NODES_FILE=COMMON_NODES
TARBALL=

function show_help {
    echo "deploy_to_sandboxes "
    echo "usage $0 [options] "
    echo '-h               => help'
    echo "-P port          => MySQL port  ($MYSQL_PORT)"
    echo "-d sandbox dir   => sandbox directory name ($SANDBOX_DIR)"
    echo "-m version       => MySQL version ($MYSQL_VERSION)"
    echo "-n nodes file    => NODES file to load ($NODES_FILE)"
    echo "-l list of nodes =>list of nodes to use instead of the ones in the NODES file"
    echo '-t tarball       => MySQL tarball to install remotely (none)'
    echo '-U               => DO NOT update USER_VALUES.sh (yes by default)'
    echo ""
    echo "This command takes the list of nodes in COMMON_NODES.sh and installs a MySQL sandbox in each one."
    echo "It then modifies USER_VALUES.sh with the info pointing to the sandboxes."
    echo "After that, you can install in the sandboxes, instead of using the default values."
    exit 1
}

args=$(getopt hUP:m:n:d:l:t: $*)

if [ $? != 0 ]
then
    show_help
fi

set -- $args

for i
do
    case "$i"
        in
        -h)
            show_help
            ;;
        -d)
            export SANDBOX_DIR=$2
            shift
            shift
            ;;
        -n)
            export NODES_FILE=$2
            shift
            shift
            ;;
        -l)
            export NODES_LIST=$(echo $2 | tr ',' ' ')
            count=0
            for NODE in $NODES_LIST
            do
                NODES[$count]=$NODE
                count=$(($count+1))
            done
            export UPDATE_USER_VALUES=
            shift
            shift
            ;;
        -m)
            export MYSQL_VERSION=$2
            shift
            shift
            ;;
        -P)
            export MYSQL_PORT=$2
            shift
            shift
            ;;
        -t)
            export TARBALL=$2
            shift
            shift
            ;;
        -U)
            # disable updating of USER_VALUES
            export UPDATE_USER_VALUES=
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done


if [ -z "$NODES_LIST" ]
then
    if [ ! -f $cookbook_dir/$NODES_FILE.sh ]
    then
        echo "could not find $cookbook_dir/$NODES_FILE.sh"
        exit 1
    fi
    . $cookbook_dir/$NODES_FILE.sh
    if [ $NODES_FILE == "COMMON_NODES" ]
    then
        NODES=($NODE1 $NODE2 $NODE3 $NODE4 $NODE5 $NODE6 $NODE7 $NODE8 $NODE9 $NODE10)
    else
        NODES=$ALL_NODES
    fi
fi

# remove the sandbox if it already exists
for HOST in ${NODES[*]} 
do 
    ssh $HOST "if [ -d $HOME/sandboxes/$SANDBOX_DIR ] ; then sbtool -o delete -s $HOME/sandboxes/$SANDBOX_DIR > /dev/null ; fi" 
done

BUILD_SB=$HOME/build_sb.sh

echo "#!/bin/bash" > $BUILD_SB
echo 'SANDBOX_EXISTS=$(for P in `echo $PATH | tr ":" " "` ; do if [ -f $P/make_sandbox ] ; then echo $P/make_sandbox ; fi; done)' >> $BUILD_SB
echo 'if [ -z "$SANDBOX_EXISTS" ] ; then hostname; echo "make_sandbox not found in PATH" ; exit 1; fi' >> $BUILD_SB

echo 'SANDBOX_OPTIONS="--no_confirm  --no_show -c server-id=$1 -c log-bin=mysql-bin -c log-slave-updates -c innodb_flush_log_at_trx_commit=1"' >> $BUILD_SB
echo 'export SANDBOX_OPTIONS="$SANDBOX_OPTIONS -c max_allowed_packet=48M --remote_access=%"' >> $BUILD_SB
if [ -n "$TARBALL" ]
then
    BASE_TARBALL=$(basename $TARBALL)
    echo "make_sandbox \$HOME/opt/mysql/$BASE_TARBALL -- --sandbox_port=$MYSQL_PORT \\" >> $BUILD_SB
else
    echo "make_sandbox $MYSQL_VERSION -- --sandbox_port=$MYSQL_PORT \\" >> $BUILD_SB
fi
echo "   --sandbox_directory=$SANDBOX_DIR  \$SANDBOX_OPTIONS" >> $BUILD_SB
chmod +x $BUILD_SB

SERVER_ID_COUNTER=0
for HOST in  ${NODES[*]}
do
   SERVER_ID_COUNTER=$(($SERVER_ID_COUNTER+10))
   if [ -n "$TARBALL" ]
   then
        ssh $HOST 'if [ ! -d $HOME/opt/mysql ] ; then mkdir -p $HOME/opt/mysql ; fi' 
        scp -p $TARBALL $HOST:~/opt/mysql
   fi
   scp -p $BUILD_SB $HOST:$BUILD_SB
   ssh $HOST $BUILD_SB $SERVER_ID_COUNTER
done

for HOST in  ${NODES[*]}
do
   $HOME/sandboxes/$SANDBOX_DIR/use -h $HOST -e 'update mysql.user set Grant_Priv="Y" where user="msandbox"; flush privileges'
   $HOME/sandboxes/$SANDBOX_DIR/use -h $HOST -e 'grant all on *.* to tungsten identified by "secret" with grant option'
done

if [ -z "$UPDATE_USER_VALUES" ]
then
    exit
fi

# updating USER_VALUES

function replace_text
{
    filename=$1
    find_string=$2
    replacement=$3
    BAK=''
    if [ -n "$4" ]
    then
        BAK='.bak'
    fi
    perl -i$BAK -pe "s{$find_string}{$replacement}"  $filename
}

replace_text $cookbook_dir/USER_VALUES.sh '/var/lib/mysql' "$HOME/sandboxes/$SANDBOX_DIR/data" BACKUP
replace_text $cookbook_dir/USER_VALUES.sh '/etc/my.cnf' "$HOME/sandboxes/$SANDBOX_DIR/my.sandbox.cnf"
replace_text $cookbook_dir/USER_VALUES.sh 'DATABASE_PORT=3306' "DATABASE_PORT=$MYSQL_PORT"
replace_text $cookbook_dir/USER_VALUES.sh '/etc/init.d/mysql' "$HOME/sandboxes/$SANDBOX_DIR/msb"
